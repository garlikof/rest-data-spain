server:
  port: ${PORT:8080}
  servlet:
    context-path: /rest-data
spring:
  application:
    name: rest-data
  datasource:
    url: jdbc:postgresql://147.45.190.152:5432/rent1
    username: rent1
    password: 1qaz2wsx#EDC
#    driver-class-name: com.
    hikari:
      idle-timeout: 15000
      max-lifetime: 35000
      validationTimeout: 300000
      connection-timeout: 300000
      connectionTestQuery: SELECT 1
      maximumPoolSize: 5
  jpa:
    properties:
      hibernate:
        default_schema: rent2


  # Для Keycloak пример конфигурации
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://id.estoyenscasa.com/realms/res
          jwk-set-uri: https://id.estoyenscasa.com/realms/res/protocol/openid-connect/certs
      client:
        registration:
          keycloak:
            client-id: backend
            client-secret: ViAUzE2szINiJUBMB0ZD7Hfi4UobqfVR
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/keycloak"
            scope: openid,profile,email
        provider:
          keycloak:
            issuer-uri: https://id.estoyenscasa.com/realms/res
            user-name-attribute: preferred_username
management:
  endpoint:
    health:
      enabled: true
      show-details: always
      probes:
        enabled: true
      livenessState:
        enabled: true
      readinessState:
        enabled: true
    info:
      enabled: true
  endpoints:
    web:
      exposure:
        include: 'health,info'
