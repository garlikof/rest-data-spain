plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
    id 'com.google.cloud.tools.jib' version '3.4.5'
    id 'org.liquibase.gradle' version '2.2.0'
}

group = 'org.garlikoff'
version = '0.3.1'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

jib {
    to {
        image = "garlikoff/rest-data-spain:$version"
    }
}

/*
jar {
    processResources.exclude("application-local.yaml", "deployment-app-rest-data.yaml")

}*/

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-rest'
        implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.7'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'


	//security
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	//Lombok
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'

	//openAPI
	implementation  'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.11'
	implementation 'org.springdoc:springdoc-openapi-data-rest:1.8.0'
    implementation 'org.apache.commons:commons-lang3:3.18.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


dependencies {
    // Liquibase
    liquibaseRuntime 'org.liquibase:liquibase-core:4.23.0'
    liquibaseRuntime 'info.picocli:picocli:4.7.4'
    liquibaseRuntime group: 'org.postgresql', name: 'postgresql', version: '42.7.7'
}

tasks.named('test') {
	useJUnitPlatform()
}

liquibase {
    activities {
        main {
            changelogFile 'src/main/resources/liquibase/db.changelog-master.xml'
            url project.findProperty('url') ?: 'jdbc:postgresql://localhost:5432/mydb'
            username project.findProperty('username') ?: 'postgres'
            password project.findProperty('password') ?: 'password'
            driver 'org.postgresql.Driver'
        }
    }
    runList = project.findProperty('runList') ?: 'main'
}